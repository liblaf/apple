import warp
from _typeshed import Incomplete
from warp.thirdparty.dlpack import DLDataType as DLDataType, DLDataTypeCode as DLDataTypeCode, DLDevice as DLDevice, DLDeviceType as DLDeviceType, DLManagedTensor as DLManagedTensor

PyMem_RawMalloc: Incomplete
PyMem_RawFree: Incomplete
Py_IncRef: Incomplete
Py_DecRef: Incomplete
PyCapsule_Destructor: Incomplete
PyCapsule_IsValid: Incomplete
PyCapsule_GetPointer: Incomplete
PyCapsule_SetName: Incomplete

class _DLPackTensorHolder:
    def __new__(cls, *args, **kwargs): ...
    mem_ptr: Incomplete
    def __init__(self, mem_ptr) -> None: ...
    def __del__(self) -> None: ...

def device_to_dlpack(wp_device) -> DLDevice: ...
def dtype_to_dlpack(wp_dtype) -> DLDataType: ...
def dtype_from_dlpack(dl_dtype): ...
def device_from_dlpack(dl_device): ...
def shape_to_dlpack(shape): ...
def strides_to_dlpack(strides, dtype): ...
def to_dlpack(wp_array: warp.array): ...
def dtype_is_compatible(dl_dtype, wp_dtype): ...
def from_dlpack(source, dtype=None) -> warp.array: ...
