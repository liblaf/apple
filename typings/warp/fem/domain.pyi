import warp as wp
import warp.codegen
import warp.context
import warp.fem.cache as cache
from _typeshed import Incomplete
from functools import cached_property as cached_property
from warp.fem.geometry import Element as Element, Geometry as Geometry, GeometryPartition as GeometryPartition, WholeGeometryPartition as WholeGeometryPartition
from warp.fem.operator import Operator as Operator
from warp.fem.types import ElementKind as ElementKind, NULL_ELEMENT_INDEX as NULL_ELEMENT_INDEX

GeometryOrPartition = Geometry | GeometryPartition

class GeometryDomain:
    geometry_partition: Incomplete
    geometry: Incomplete
    def __init__(self, geometry: GeometryOrPartition) -> None: ...
    @property
    def name(self) -> str: ...
    def __eq__(self, other) -> bool: ...
    @property
    def element_kind(self) -> ElementKind: ...
    @property
    def dimension(self) -> int: ...
    def element_count(self) -> int: ...
    def geometry_element_count(self) -> int: ...
    def reference_element(self) -> Element: ...
    def element_index_arg_value(self, device: warp.context.Devicelike) -> warp.codegen.StructInstance: ...
    def element_arg_value(self, device: warp.context.Devicelike) -> warp.codegen.StructInstance: ...
    ElementIndexArg: warp.codegen.Struct
    element_index: wp.Function
    element_partition_index: wp.Function
    ElementArg: warp.codegen.Struct
    element_measure: wp.Function
    element_measure_ratio: wp.Function
    element_position: wp.Function
    element_deformation_gradient: wp.Function
    element_normal: wp.Function
    element_closest_point: wp.Function
    element_coordinates: wp.Function
    element_lookup: wp.Function
    element_partition_lookup: wp.Function
    def notify_operator_usage(self, ops: set[Operator]): ...
    @cached_property
    def DomainArg(self): ...

class Cells(GeometryDomain):
    def __init__(self, geometry: GeometryOrPartition) -> None: ...
    @property
    def element_kind(self) -> ElementKind: ...
    @property
    def dimension(self) -> int: ...
    def reference_element(self) -> Element: ...
    def element_count(self) -> int: ...
    def geometry_element_count(self) -> int: ...
    @property
    def ElementIndexArg(self) -> warp.codegen.Struct: ...
    def element_index_arg_value(self, device: warp.context.Devicelike) -> warp.codegen.StructInstance: ...
    def fill_element_index_arg(self, arg: ElementIndexArg, device: warp.context.Devicelike): ...
    @property
    def element_index(self) -> wp.Function: ...
    @property
    def element_partition_index(self) -> wp.Function: ...
    def element_arg_value(self, device: warp.context.Devicelike) -> warp.codegen.StructInstance: ...
    def fill_element_arg(self, arg: ElementArg, device: warp.context.Devicelike): ...
    @property
    def ElementArg(self) -> warp.codegen.Struct: ...
    @property
    def element_position(self) -> wp.Function: ...
    @property
    def element_deformation_gradient(self) -> wp.Function: ...
    @property
    def element_measure(self) -> wp.Function: ...
    @property
    def element_measure_ratio(self) -> wp.Function: ...
    @property
    def element_normal(self) -> wp.Function: ...
    @property
    def element_closest_point(self) -> wp.Function: ...
    @property
    def element_coordinates(self) -> wp.Function: ...
    @property
    def element_lookup(self) -> wp.Function: ...
    @property
    def element_partition_lookup(self) -> wp.Function: ...
    def supports_lookup(self, device): ...
    @property
    def domain_cell_arg(self) -> wp.Function: ...
    def cell_domain(self): ...

class Sides(GeometryDomain):
    geometry: Incomplete
    element_lookup: Incomplete
    element_partition_lookup: Incomplete
    element_filtered_lookup: Incomplete
    def __init__(self, geometry: GeometryOrPartition) -> None: ...
    def supports_lookup(self, device): ...
    @property
    def element_kind(self) -> ElementKind: ...
    @property
    def dimension(self) -> int: ...
    def reference_element(self) -> Element: ...
    def element_count(self) -> int: ...
    def geometry_element_count(self) -> int: ...
    @property
    def ElementIndexArg(self) -> warp.codegen.Struct: ...
    def element_index_arg_value(self, device: warp.context.Devicelike) -> warp.codegen.StructInstance: ...
    def fill_element_index_arg(self, arg: ElementIndexArg, device: warp.context.Devicelike): ...
    @property
    def element_index(self) -> wp.Function: ...
    @property
    def ElementArg(self) -> warp.codegen.Struct: ...
    def element_arg_value(self, device: warp.context.Devicelike) -> warp.codegen.StructInstance: ...
    def fill_element_arg(self, arg: ElementArg, device: warp.context.Devicelike): ...
    @property
    def element_position(self) -> wp.Function: ...
    @property
    def element_deformation_gradient(self) -> wp.Function: ...
    @property
    def element_measure(self) -> wp.Function: ...
    @property
    def element_measure_ratio(self) -> wp.Function: ...
    @property
    def element_normal(self) -> wp.Function: ...
    @property
    def element_closest_point(self) -> wp.Function: ...
    @property
    def element_coordinates(self) -> wp.Function: ...
    @property
    def element_inner_cell_index(self) -> wp.Function: ...
    @property
    def element_outer_cell_index(self) -> wp.Function: ...
    @property
    def element_inner_cell_coords(self) -> wp.Function: ...
    @property
    def element_outer_cell_coords(self) -> wp.Function: ...
    @property
    def cell_to_element_coords(self) -> wp.Function: ...
    @cached_property
    def domain_cell_arg(self) -> wp.Function: ...
    def cell_domain(self): ...

class BoundarySides(Sides):
    def __init__(self, geometry: GeometryOrPartition) -> None: ...
    def element_count(self) -> int: ...
    def geometry_element_count(self) -> int: ...
    @property
    def element_index(self) -> wp.Function: ...

class FrontierSides(Sides):
    def __init__(self, geometry: GeometryOrPartition) -> None: ...
    def element_count(self) -> int: ...
    def geometry_element_count(self) -> int: ...
    @property
    def element_index(self) -> wp.Function: ...

class Subdomain(GeometryDomain):
    ElementIndexArg: Incomplete
    element_index: Incomplete
    ElementArg: Incomplete
    geometry_element_count: Incomplete
    reference_element: Incomplete
    element_arg_value: Incomplete
    fill_element_arg: Incomplete
    element_measure: Incomplete
    element_measure_ratio: Incomplete
    element_position: Incomplete
    element_deformation_gradient: Incomplete
    element_lookup: Incomplete
    element_partition_lookup: Incomplete
    element_normal: Incomplete
    def __init__(self, domain: GeometryDomain, element_mask: wp.array | None = None, element_indices: wp.array | None = None, temporary_store: cache.TemporaryStore | None = None) -> None: ...
    @property
    def name(self) -> str: ...
    def __eq__(self, other) -> bool: ...
    @property
    def element_kind(self) -> ElementKind: ...
    @property
    def dimension(self) -> int: ...
    def element_count(self) -> int: ...
    @cache.cached_arg_value
    def element_index_arg_value(self, device: warp.context.Devicelike): ...
    def fill_element_index_arg(self, arg: GeometryDomain.ElementIndexArg, device: warp.context.Devicelike): ...
    def supports_lookup(self, device): ...
    def cell_domain(self): ...
    @cached_property
    def domain_cell_arg(self) -> wp.Function: ...
