import warp as wp
from .field import DiscreteField as DiscreteField
from warp.fem import cache as cache
from warp.fem.space import CollocatedFunctionSpace as CollocatedFunctionSpace, SpacePartition as SpacePartition
from warp.fem.types import ElementIndex as ElementIndex, NULL_NODE_INDEX as NULL_NODE_INDEX, Sample as Sample
from warp.fem.utils import type_zero_element as type_zero_element

class NodalFieldBase(DiscreteField):
    def __init__(self, space: CollocatedFunctionSpace, space_partition: SpacePartition) -> None: ...

class NodalField(NodalFieldBase):
    def __init__(self, space: CollocatedFunctionSpace, space_partition: SpacePartition) -> None: ...
    def eval_arg_value(self, device): ...
    def fill_eval_arg(self, arg, device) -> None: ...
    @property
    def dof_values(self) -> wp.array: ...
    @dof_values.setter
    def dof_values(self, values) -> None: ...
    class Trace(NodalFieldBase):
        def __init__(self, field) -> None: ...
        def eval_arg_value(self, device): ...
        def fill_eval_arg(self, arg, device) -> None: ...
    def trace(self) -> Trace: ...
