import warp as wp
from .geometry import Geometry as Geometry
from _typeshed import Incomplete
from functools import cached_property as cached_property
from typing import Any
from warp.fem.cache import TemporaryStore as TemporaryStore, borrow_temporary as borrow_temporary, cached_arg_value as cached_arg_value, dynamic_struct as dynamic_struct
from warp.fem.types import ElementIndex as ElementIndex, NULL_ELEMENT_INDEX as NULL_ELEMENT_INDEX
from warp.fem.utils import masked_indices as masked_indices

class GeometryPartition:
    class CellArg: ...
    class SideArg: ...
    geometry: Incomplete
    def __init__(self, geometry: Geometry) -> None: ...
    def cell_count(self) -> int: ...
    def side_count(self) -> int: ...
    def boundary_side_count(self) -> int: ...
    def frontier_side_count(self) -> int: ...
    @property
    def name(self) -> str: ...
    def cell_arg_value(self, device) -> None: ...
    def fill_cell_arg(self, args: CellArg, device): ...
    def side_arg_value(self, device) -> None: ...
    def fill_side_arg(self, args: SideArg, device): ...
    @staticmethod
    def cell_index(args: CellArg, partition_cell_index: int): ...
    @staticmethod
    def partition_cell_index(args: CellArg, cell_index: int): ...
    @staticmethod
    def side_index(args: SideArg, partition_side_index: int): ...
    @staticmethod
    def boundary_side_index(args: SideArg, boundary_side_index: int): ...
    @staticmethod
    def frontier_side_index(args: SideArg, frontier_side_index: int): ...

class WholeGeometryPartition(GeometryPartition):
    SideArg: Incomplete
    side_arg_value: Incomplete
    fill_side_arg: Incomplete
    cell_index: Incomplete
    partition_cell_index: Incomplete
    side_index: Incomplete
    boundary_side_index: Incomplete
    frontier_side_index: Incomplete
    def __init__(self, geometry: Geometry) -> None: ...
    def __eq__(self, other: GeometryPartition) -> bool: ...
    def cell_count(self) -> int: ...
    def side_count(self) -> int: ...
    def boundary_side_count(self) -> int: ...
    def frontier_side_count(self) -> int: ...
    class CellArg: ...
    def cell_arg_value(self, device): ...
    def fill_cell_arg(self, args: CellArg, device): ...
    @property
    def name(self) -> str: ...
    @wp.func
    def side_to_cell_arg(side_arg: Any): ...

class CellBasedGeometryPartition(GeometryPartition):
    def __init__(self, geometry: Geometry, device=None) -> None: ...
    @cached_property
    def SideArg(self): ...
    def side_count(self) -> int: ...
    def boundary_side_count(self) -> int: ...
    def frontier_side_count(self) -> int: ...
    @cached_arg_value
    def side_arg_value(self, device): ...
    def fill_side_arg(self, args: SideArg, device): ...
    @wp.func
    def side_index(args: Any, partition_side_index: int): ...
    @wp.func
    def boundary_side_index(args: Any, boundary_side_index: int): ...
    @wp.func
    def frontier_side_index(args: Any, frontier_side_index: int): ...
    def compute_side_indices_from_cells(self, cell_arg_value: Any, cell_inclusion_test_func: wp.Function, device, temporary_store: TemporaryStore = None): ...
    @wp.func
    def side_to_cell_arg(side_arg: Any): ...

class LinearGeometryPartition(CellBasedGeometryPartition):
    cell_begin: Incomplete
    cell_end: Incomplete
    def __init__(self, geometry: Geometry, partition_rank: int, partition_count: int, device=None, temporary_store: TemporaryStore = None) -> None: ...
    def cell_count(self) -> int: ...
    class CellArg:
        cell_begin: int
        cell_end: int
    def cell_arg_value(self, device): ...
    def fill_cell_arg(self, args: CellArg, device): ...
    @wp.func
    def cell_index(args: CellArg, partition_cell_index: int): ...
    @wp.func
    def partition_cell_index(args: CellArg, cell_index: int): ...

class ExplicitGeometryPartition(CellBasedGeometryPartition):
    def __init__(self, geometry: Geometry, cell_mask: 'wp.array(dtype=int)', temporary_store: TemporaryStore = None) -> None: ...
    def cell_count(self) -> int: ...
    class CellArg:
        cell_index: None
        partition_cell_index: None
    @cached_arg_value
    def cell_arg_value(self, device): ...
    def fill_cell_arg(self, args: CellArg, device): ...
    @wp.func
    def cell_index(args: CellArg, partition_cell_index: int): ...
    @wp.func
    def partition_cell_index(args: CellArg, cell_index: int): ...
