import warp as wp
from .basis_space import BasisSpace as BasisSpace
from .dof_mapper import DofMapper as DofMapper, IdentityMapper as IdentityMapper
from .function_space import FunctionSpace as FunctionSpace
from .partition import SpacePartition as SpacePartition, make_space_partition as make_space_partition
from _typeshed import Incomplete
from typing import Any
from warp.fem import cache as cache
from warp.fem.geometry import Geometry as Geometry
from warp.fem.linalg import generalized_inner as generalized_inner, generalized_outer as generalized_outer
from warp.fem.types import Coords as Coords, ElementIndex as ElementIndex, NULL_QP_INDEX as NULL_QP_INDEX, make_free_sample as make_free_sample
from warp.fem.utils import type_basis_element as type_basis_element

class CollocatedFunctionSpace(FunctionSpace):
    class LocalValueMap: ...
    dof_mapper: Incomplete
    dtype: Incomplete
    dof_dtype: Incomplete
    VALUE_DOF_COUNT: Incomplete
    NODE_DOF_COUNT: Incomplete
    SpaceArg: Incomplete
    space_arg_value: Incomplete
    fill_space_arg: Incomplete
    ORDER: Incomplete
    node_grid: Incomplete
    node_triangulation: Incomplete
    node_tets: Incomplete
    node_hexes: Incomplete
    vtk_cells: Incomplete
    def __init__(self, basis: BasisSpace, dtype: type = ..., dof_mapper: DofMapper = None) -> None: ...
    @property
    def name(self): ...
    def node_positions(self, out: wp.array | None = None) -> wp.array: ...
    def make_field(self, space_partition: SpacePartition | None = None) -> wp.fem.field.NodalField: ...
    def trace(self) -> CollocatedFunctionSpace: ...
    @wp.func
    def local_value_map_inner(elt_arg: Any, element_index: ElementIndex, element_coords: Coords): ...
    @wp.func
    def local_value_map_outer(elt_arg: Any, element_index: ElementIndex, element_coords: Coords): ...

class CollocatedFunctionSpaceTrace(CollocatedFunctionSpace):
    def __init__(self, space: CollocatedFunctionSpace) -> None: ...
    @property
    def name(self): ...
    def __eq__(self, other: CollocatedFunctionSpaceTrace) -> bool: ...

class VectorValuedFunctionSpace(FunctionSpace):
    dtype: Incomplete
    dof_dtype: Incomplete
    VALUE_DOF_COUNT: Incomplete
    NODE_DOF_COUNT: int
    SpaceArg: Incomplete
    space_arg_value: Incomplete
    fill_space_arg: Incomplete
    ORDER: Incomplete
    LocalValueMap: Incomplete
    def __init__(self, basis: BasisSpace) -> None: ...
    @property
    def name(self): ...
    def node_positions(self, out: wp.array | None = None) -> wp.array: ...
    def make_field(self, space_partition: SpacePartition | None = None) -> wp.fem.field.NodalField: ...
    @wp.func
    def node_basis_element(dof_coord: int): ...

class CovariantFunctionSpace(VectorValuedFunctionSpace):
    def __init__(self, basis: BasisSpace) -> None: ...
    def trace(self) -> CovariantFunctionSpaceTrace: ...

class CovariantFunctionSpaceTrace(VectorValuedFunctionSpace):
    def __init__(self, space: VectorValuedFunctionSpace) -> None: ...
    @property
    def name(self): ...
    def __eq__(self, other: CovariantFunctionSpaceTrace) -> bool: ...

class ContravariantFunctionSpace(VectorValuedFunctionSpace):
    def __init__(self, basis: BasisSpace) -> None: ...
    def trace(self) -> ContravariantFunctionSpaceTrace: ...

class ContravariantFunctionSpaceTrace(VectorValuedFunctionSpace):
    def __init__(self, space: ContravariantFunctionSpace) -> None: ...
    @property
    def name(self): ...
    def __eq__(self, other: ContravariantFunctionSpaceTrace) -> bool: ...
