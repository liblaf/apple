import warp as wp
import warp.fem.cache as cache
from warp.fem.linalg import array_axpy as array_axpy, inverse_qr as inverse_qr, symmetric_eigenvalues_qr as symmetric_eigenvalues_qr
from warp.fem.types import NULL_NODE_INDEX as NULL_NODE_INDEX
from warp.utils import array_scan as array_scan, radix_sort_pairs as radix_sort_pairs, runlength_encode as runlength_encode

def type_zero_element(dtype): ...
def type_basis_element(dtype): ...
def compress_node_indices(node_count: int, node_indices: None, return_unique_nodes: bool = False, temporary_store: cache.TemporaryStore = None) -> tuple[cache.Temporary, cache.Temporary] | tuple[cache.Temporary, cache.Temporary, int, cache.Temporary]: ...
def host_read_at_index(array: wp.array, index: int = -1, temporary_store: cache.TemporaryStore = None) -> int: ...
def masked_indices(mask: wp.array, missing_index: int = -1, temporary_store: cache.TemporaryStore = None) -> tuple[cache.Temporary, cache.Temporary]: ...
def grid_to_tris(Nx: int, Ny: int): ...
def grid_to_tets(Nx: int, Ny: int, Nz: int): ...
def grid_to_quads(Nx: int, Ny: int): ...
def grid_to_hexes(Nx: int, Ny: int, Nz: int): ...
