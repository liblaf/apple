import warp as wp

def compute_sphere_inertia(density: float, r: float) -> tuple[float, wp.vec3, wp.mat33]: ...
def compute_capsule_inertia(density: float, r: float, h: float) -> tuple[float, wp.vec3, wp.mat33]: ...
def compute_cylinder_inertia(density: float, r: float, h: float) -> tuple[float, wp.vec3, wp.mat33]: ...
def compute_cone_inertia(density: float, r: float, h: float) -> tuple[float, wp.vec3, wp.mat33]: ...
def compute_box_inertia(density: float, w: float, h: float, d: float) -> tuple[float, wp.vec3, wp.mat33]: ...
@wp.func
def triangle_inertia(v0: wp.vec3, v1: wp.vec3, v2: wp.vec3): ...
@wp.kernel
def compute_solid_mesh_inertia(indices: None, vertices: None, volume: None, first: None, second: None): ...
@wp.kernel
def compute_hollow_mesh_inertia(indices: None, vertices: None, thickness: None, volume: None, first: None, second: None): ...
def compute_mesh_inertia(density: float, vertices: list, indices: list, is_solid: bool = True, thickness: list[float] | float = 0.001) -> tuple[float, wp.vec3, wp.mat33, float]: ...
def transform_inertia(m, I, p, q) -> wp.mat33: ...
