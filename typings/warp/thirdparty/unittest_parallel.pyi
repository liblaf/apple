import unittest
from _typeshed import Incomplete
from warp.tests.unittest_utils import ParallelJunitTestResult as ParallelJunitTestResult, write_junit_results as write_junit_results

COVERAGE_AVAILABLE: bool
START_DIRECTORY: Incomplete

def main(argv=None) -> None: ...

class ParallelTestManager:
    args: Incomplete
    temp_dir: Incomplete
    failfast: Incomplete
    def __init__(self, manager, args, temp_dir) -> None: ...
    def run_tests(self, test_suite): ...

class ParallelTextTestResult(unittest.TextTestResult):
    test_record: Incomplete
    def __init__(self, stream, descriptions, verbosity) -> None: ...
    def startTest(self, test) -> None: ...
    def addSuccess(self, test) -> None: ...
    def addError(self, test, err) -> None: ...
    def addFailure(self, test, err) -> None: ...
    def addSkip(self, test, reason) -> None: ...
    def addExpectedFailure(self, test, err) -> None: ...
    def addUnexpectedSuccess(self, test) -> None: ...
    def printErrors(self) -> None: ...

def initialize_test_process(lock, shared_index, args, temp_dir) -> None: ...
