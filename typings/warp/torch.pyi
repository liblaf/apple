import warp.context

def device_from_torch(torch_device) -> warp.context.Device: ...
def device_to_torch(warp_device: warp.context.Devicelike) -> str: ...
def dtype_to_torch(warp_dtype): ...
def dtype_from_torch(torch_dtype): ...
def dtype_is_compatible(torch_dtype, warp_dtype) -> bool: ...
def from_torch(t, dtype=None, requires_grad=None, grad=None, return_ctype: bool = False): ...
def to_torch(a, requires_grad=None): ...
def stream_from_torch(stream_or_device=None): ...
def stream_to_torch(stream_or_device=None): ...
